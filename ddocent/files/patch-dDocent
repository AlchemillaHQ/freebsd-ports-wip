--- dDocent.orig	2018-06-15 14:35:16 UTC
+++ dDocent
@@ -1,6 +1,9 @@
 #!/usr/local/bin/bash
 export LC_ALL=en_US.UTF-8
 
+# GNU Parallel uses $SHELL and has issues with [t]csh
+export SHELL=%%BASH%%
+
 ##########dDocent##########
 VERSION='2.5.2'
 #This script serves as an interactive bash wrapper to QC, assemble, map, and call SNPs from double digest RAD (SE or PE), ezRAD (SE or PE) data, or SE RAD data.
@@ -27,19 +30,19 @@ do
 	fi
 done
 
-if find ${PATH//:/ } -maxdepth 1 -name trimmomatic*jar 2> /dev/null| grep -q 'trim' ; then
-	TRIMMOMATIC=$(find ${PATH//:/ } -maxdepth 1 -name trimmomatic*jar 2> /dev/null | head -1)
-	else
+if [ -e %%JAVAJARDIR%%/trimmomatic.jar ]; then
+	TRIMMOMATIC=%%JAVAJARDIR%%/trimmomatic.jar
+else
     echo "The dependency trimmomatic is not installed or is not in your" '$PATH'"."
     NUMDEP=$((NUMDEP + 1))
-	fi
+fi
 
-if find ${PATH//:/ } -maxdepth 1 -name TruSeq2-PE.fa 2> /dev/null | grep -q 'Tru' ; then
-	ADAPTERS=$(find ${PATH//:/ } -maxdepth 1 -name TruSeq2-PE.fa 2> /dev/null | head -1)
-	else
+if [ -e %%PREFIX%%/share/trimmomatic/adapters/TruSeq2-PE.fa ]; then
+	ADAPTERS=%%PREFIX%%/share/trimmomatic/adapters/TruSeq2-PE.fa
+else
     echo "The file listing adapters (included with trimmomatic) is not installed or is not in your" '$PATH'"."
     NUMDEP=$((NUMDEP + 1))
-    fi
+fi
 
 SAMV1=$(samtools 2>&1 >/dev/null | grep Ver | sed -e 's/Version://' | cut -f2 -d " " | sed -e 's/-.*//' | cut -c1)
 SAMV2=$(samtools 2>&1 >/dev/null | grep Ver | sed -e 's/Version://' | cut -f2 -d " " | sed -e 's/-.*//' | cut -c3)
@@ -96,7 +99,8 @@ VCFTV=$(vcftools | grep VCF | grep -oh '
         elif [ "$VCFTV" -ge "12" ]; then
                 VCFGTFLAG="--max-missing"
 	fi
-BWAV=$(bwa 2>&1 | mawk '/Versi/' | sed 's/Version: //g' | sed 's/0.7.//g' | sed 's/-.*//g' | cut -c 1-2)
+BWAV=$(bwa 2>&1 | mawk '/Versi/' | sed 's/Version: //g' | sed 's/0.7.//g' | sed
+ 's/a*-.*//g')
 	if [ "$BWAV" -lt "13" ]; then
         	echo "The version of bwa installed in your" '$PATH' "is not optimized for dDocent."
         	echo "Please install at least version 0.7.13"
@@ -114,7 +118,7 @@ BTC=$( bedtools --version | mawk '{print
 		exit 1	
 	fi
 		
-if ! awk --version | fgrep -v GNU &>/dev/null; then
+if ! awk --version | fgrep GNU &>/dev/null; then
          awk=gawk
     else
          awk=awk
@@ -440,7 +444,7 @@ if [ "$SNP" != "no" ]; then
 	
 	rm freebayes.error freebayes.log &> /dev/null
 	
-	ls mapped.*.bed | sed 's/mapped.//g' | sed 's/.bed//g' | shuf | parallel --bar --halt now,fail=1 --env call_genos --memfree $MAXMemory -j $NUMProc --no-notice "call_genos {} 2> /dev/null"
+	ls mapped.*.bed | sed 's/mapped.//g' | sed 's/.bed//g' | gshuf | parallel --bar --halt now,fail=1 --env call_genos --memfree $MAXMemory -j $NUMProc --no-notice "call_genos {} 2> /dev/null"
 
 
 	if [ -f "freebayes.error" ]; then
@@ -467,7 +471,7 @@ if [ "$SNP" != "no" ]; then
 		echo "Using FreeBayes to call SNPs again"
 		NumP=$(( $NUMProc / 4 ))
 		NumP=$(( $NumP * 3 ))
-		ls mapped.*.bed | sed 's/mapped.//g' | sed 's/.bed//g' | shuf | parallel --bar --halt now,fail=1 --env call_genos --memfree $MAXMemory -j $NumP --no-notice "call_genos {} 2> /dev/null" 
+		ls mapped.*.bed | sed 's/mapped.//g' | sed 's/.bed//g' | gshuf | parallel --bar --halt now,fail=1 --env call_genos --memfree $MAXMemory -j $NumP --no-notice "call_genos {} 2> /dev/null" 
         fi
 
 	if [ -f "freebayes.error" ]; then
@@ -492,7 +496,7 @@ if [ "$SNP" != "no" ]; then
             	NumP=$(( $NumP / 4 ))
                 NumP=$(( $NumP * 3 ))
 		echo "Using FreeBayes to call SNPs again"
-                ls mapped.*.bed | sed 's/mapped.//g' | sed 's/.bed//g' | shuf | parallel --bar --halt now,fail=1 --env call_genos --memfree $MAXMemory -j $NumP --no-notice "call_genos {} 2> /dev/null"
+                ls mapped.*.bed | sed 's/mapped.//g' | sed 's/.bed//g' | gshuf | parallel --bar --halt now,fail=1 --env call_genos --memfree $MAXMemory -j $NumP --no-notice "call_genos {} 2> /dev/null"
 	fi
 
 	if [ -f "freebayes.error" ]; then
@@ -560,8 +564,8 @@ fi
 
 #Function for trimming reads using trimmomatic
 trim_reads(){
-	TRIMMOMATIC=$(find ${PATH//:/ } -maxdepth 1 -name trimmomatic*jar 2> /dev/null | head -1)
-    	ADAPTERS=$(find ${PATH//:/ } -maxdepth 1 -name TruSeq2-PE.fa 2> /dev/null | head -1)
+	TRIMMOMATIC=%%JAVAJARDIR%%/trimmomatic.jar
+	ADAPTERS=%%PREFIX%%/share/trimmomatic/adapters/TruSeq2-PE.fa
 
 	if [ -f $1.R.fq.gz ]; then	
 		java -Xmx2g -jar $TRIMMOMATIC PE -threads 2 -phred33 $1.F.fq.gz $1.R.fq.gz $1.R1.fq.gz $1.unpairedF.fq.gz $1.R2.fq.gz $1.unpairedR.fq.gz ILLUMINACLIP:$ADAPTERS:2:30:10 LEADING:20 TRAILING:20 SLIDINGWINDOW:5:10 $TW &> $1.trim.log
@@ -1028,7 +1032,14 @@ else
 fi
 
 #Tries to get number of processors, if not asks user
-NUMProc=( `grep -c ^processor /proc/cpuinfo 2> /dev/null` ) 
+if [ `uname` = Linux ]; then
+    NUMProc=( `grep -c ^processor /proc/cpuinfo 2> /dev/null` )
+elif [ `uname` = FreeBSD ]; then
+    NUMProc=( `sysctl -n hw.ncpu` )
+else
+    printf "Unsupported platform: `uname`\n"
+    exit 1
+fi
 NUMProc=$(($NUMProc + 0)) 
 
 echo "dDocent detects $NUMProc processors available on this system."
@@ -1045,7 +1056,16 @@ if [ $NUMProc -lt 1 ]; then
 fi
 
 #Tries to get maximum system memory, if not asks user
-MAXMemory=$(($(grep -Po '(?<=^MemTotal:)\s*[0-9]+' /proc/meminfo | tr -d " ") / 1048576))
+if [ `uname` = Linux ]; then
+    MAXMemory=$(($(grep -Po '(?<=^MemTotal:)\s*[0-9]+' /proc/meminfo | tr -d "
+") / 1048576))G
+elif [ `uname` = FreeBSD ]; then
+    MAXMemory=`sysctl -n hw.realmem`
+    MAXMemory=$((MAXMemory / 1073741824))G
+else
+    printf "Unsupported platform: `uname`\n"
+    exit 1
+fi
 
 echo "dDocent detects $MAXMemory gigabytes of maximum memory available on this system."
 echo "Please enter the maximum memory to use for this analysis in gigabytes"
