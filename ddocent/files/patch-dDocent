--- dDocent.orig	2018-03-02 02:10:34 UTC
+++ dDocent
@@ -27,15 +27,15 @@ do
 	fi
 done
 
-if find ${PATH//:/ } -maxdepth 1 -name trimmomatic*jar 2> /dev/null| grep -q 'trim' ; then
-	TRIMMOMATIC=$(find ${PATH//:/ } -maxdepth 1 -name trimmomatic*jar 2> /dev/null | head -1)
+if [ -e %%JAVAJARDIR%%/trimmomatic.jar ]; then
+	TRIMMOMATIC=%%JAVAJARDIR%%/trimmomatic.jar
 	else
     echo "The dependency trimmomatic is not installed or is not in your" '$PATH'"."
     NUMDEP=$((NUMDEP + 1))
 	fi
 
-if find ${PATH//:/ } -maxdepth 1 -name TruSeq2-PE.fa 2> /dev/null | grep -q 'Tru' ; then
-	ADAPTERS=$(find ${PATH//:/ } -maxdepth 1 -name TruSeq2-PE.fa 2> /dev/null | head -1)
+if [ -e %%PREFIX%%/share/trimmomatic/adapters ]; then
+	ADAPTERS=%%PREFIX%%/share/trimmomatic/adapters
 	else
     echo "The file listing adapters (included with trimmomatic) is not installed or is not in your" '$PATH'"."
     NUMDEP=$((NUMDEP + 1))
@@ -80,6 +80,7 @@ FREEB=(`freebayes | grep -oh 'v[0-9].*' 
         	exit 1
         fi         	
 VCFTV=$(vcftools | grep VCF | grep -oh '[0-9]*[a-z]*)$' | sed 's/[a-z)]//')
+	echo $VCFTV
 	if [ "$VCFTV" -lt "10" ]; then
         	echo "The version of VCFtools installed in your" '$PATH' "is not optimized for dDocent."
         	echo "Please install at least version 0.1.11"
@@ -89,7 +90,7 @@ VCFTV=$(vcftools | grep VCF | grep -oh '
         elif [ "$VCFTV" -ge "12" ]; then
                 VCFGTFLAG="--max-missing"
 	fi
-BWAV=$(bwa 2>&1 | mawk '/Versi/' | sed 's/Version: //g' | sed 's/0.7.//g' | sed 's/-.*//g')
+BWAV=$(bwa 2>&1 | mawk '/Versi/' | sed 's/Version: //g' | sed 's/0.7.//g' | sed 's/a*-.*//g')
 	if [ "$BWAV" -lt "13" ]; then
         	echo "The version of bwa installed in your" '$PATH' "is not optimized for dDocent."
         	echo "Please install at least version 0.7.13"
@@ -733,7 +734,14 @@ else
 fi
 
 #Tries to get number of processors, if not asks user
-NUMProc=( `grep -c ^processor /proc/cpuinfo 2> /dev/null` ) 
+if [ `uname` = Linux ]; then
+    NUMProc=( `grep -c ^processor /proc/cpuinfo 2> /dev/null` ) 
+elif [ `uname` = FreeBSD ]; then
+    NUMProc=( `sysctl -n hw.ncpu` ) 
+else
+    printf "Unsupported platform: `uname`\n"
+    exit 1
+fi
 NUMProc=$(($NUMProc + 0)) 
 
 echo "dDocent detects $NUMProc processors available on this system."
@@ -750,8 +758,15 @@ if [ $NUMProc -lt 1 ]; then
 fi
 
 #Tries to get maximum system memory, if not asks user
-MAXMemory=$(($(grep -Po '(?<=^MemTotal:)\s*[0-9]+' /proc/meminfo | tr -d " ") / 1048576))G
-
+if [ `uname` = Linux ]; then
+    MAXMemory=$(($(grep -Po '(?<=^MemTotal:)\s*[0-9]+' /proc/meminfo | tr -d " ") / 1048576))G
+elif [ `uname` = FreeBSD ]; then
+    MAXMemory=`sysctl -n hw.realmem`
+    MAXMemory=$((MAXMemory / 1073741824))G
+else
+    printf "Unsupported platform: `uname`\n"
+    exit 1
+fi
 echo "dDocent detects $MAXMemory maximum memory available on this system."
 echo "Please enter the maximum memory to use for this analysis. The size can be postfixed with 
 K, M, G, T, P, k, m, g, t, or p which would multiply the size with 1024, 1048576, 1073741824, 
