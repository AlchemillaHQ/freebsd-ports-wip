--- Makefile.orig	2017-08-03 00:14:08 UTC
+++ Makefile
@@ -1,29 +1,32 @@
 ### modify these paths to local Boost and NLopt install directories
-BOOST_INSTALL_DIR = /home/pl88/boost_1_58_0/install
-NLOPT_INSTALL_DIR = /groups/price/poru/HSPH_SVN/src/BOLT-LMM/nlopt-2.4.2
+BOOST_INSTALL_DIR ?= ${LOCALBASE}
+# Redundant on FreeBSD NLOPT_INSTALL_DIR ?= ${LOCALBASE}
 
 MKLROOT = /groups/price/poru/external_software/intel/mkl
 INTELROOT = /groups/price/poru/external_software/intel
-ZLIB_STATIC_DIR = /opt/zlib-1.2.8/lib # probably unnecessary on most systems
-GLIBC_STATIC_DIR = /home/pl88/glibc-static/usr/lib64
+ZLIB_STATIC_DIR ?= /usr/lib
+GLIBC_STATIC_DIR ?= /home/pl88/glibc-static/usr/lib64
+
+INSTALL ?=	install
+MKDIR ?=	mkdir
 
 ifeq ($(strip ${linking}),)
 	linking = dynamic
 endif
 
-# CC = g++
-CC = /groups/price/poru/external_software/intel/bin/icpc
+# CXX = g++
+CXX ?= /groups/price/poru/external_software/intel/bin/icpc
 
 ifeq (${debug},true)
-	CFLAGS += -g
+	CXXFLAGS += -g
 else
-	CFLAGS += -O2
+	CXXFLAGS += -O2
 endif
 
-CFLAGS += -msse -msse2
-CFLAGS += -DUSE_SSE -DMEASURE_DGEMM -DVERBOSE
-CFLAGS += -Wall
-
+CXXFLAGS += -msse -msse2
+CXXFLAGS += -DUSE_SSE -DMEASURE_DGEMM -DVERBOSE
+CXXFLAGS += -Wall
+CXXFLAGS += -fPIC
 
 # add Boost include and lib paths
 ifneq ($(strip ${BOOST_INSTALL_DIR}),)
@@ -37,9 +40,9 @@ endif
 # add NLopt include and lib paths
 ifneq ($(strip ${NLOPT_INSTALL_DIR}),)
 	CPATHS += -I${NLOPT_INSTALL_DIR}/api
-	LPATHS += -L${NLOPT_INSTALL_DIR}/.libs
+	LPATHS += -L${NLOPT_INSTALL_DIR}/libs
 	ifeq (${linking},dynamic)
-		LPATHS += -Wl,-rpath,${NLOPT_INSTALL_DIR}/.libs
+		LPATHS += -Wl,-rpath,${NLOPT_INSTALL_DIR}/libs
 	endif
 endif
 
@@ -51,7 +54,7 @@ ifneq ($(strip ${ZLIB_STATIC_DIR}),)
 endif
 
 # add MKL paths (if not compiling with g++, i.e., compiling with icpc)
-ifneq (${CC},g++)
+ifneq (${CXX},${CXX})
 	CPATHS += -I${MKLROOT}/include
 	ifeq (${linking},dynamic)
 		LPATHS += -L${MKLROOT}/lib/intel64 -Wl,-rpath,${MKLROOT}/lib/intel64 # for libmkl*
@@ -60,28 +63,28 @@ ifneq (${CC},g++)
 endif
 
 # add flags for static linking; build LAPACK/MKL component of link line
-ifeq (${CC},g++)
-	CFLAGS += -fopenmp
-	LFLAGS += -fopenmp
-	LLAPACK = -llapack -lgfortran
+ifeq (${CXX},${CXX})
+	CXXFLAGS += -fopenmp
+	LDFLAGS += -fopenmp
+	LLAPACK = -llapack -lopenblas -lgfortran
 	ifeq (${linking},static)
-		LFLAGS += -static
+		LDFLAGS += -static
 		LPATHS += -L${GLIBC_STATIC_DIR} -L${ZLIB_STATIC_DIR}
 	else ifeq (${linking},static-except-glibc)
-		LFLAGS += -static-libgcc -static-libstdc++
+		LDFLAGS += -static-libgcc -static-libstdc++
 		LPATHS += -L${ZLIB_STATIC_DIR}
 	endif
 else
-	CFLAGS += -DUSE_MKL #-DUSE_MKL_MALLOC
-	CFLAGS += -qopenmp
-	LFLAGS += -qopenmp
-	CFLAGS += -Wunused-variable -Wpointer-arith -Wuninitialized -Wreturn-type -Wcheck -Wshadow
+	CXXFLAGS += -DUSE_MKL #-DUSE_MKL_MALLOC
+	CXXFLAGS += -qopenmp
+	LDFLAGS += -qopenmp
+	CXXFLAGS += -Wunused-variable -Wpointer-arith -Wuninitialized -Wreturn-type -Wcheck -Wshadow
 	ifeq (${linking},static)
-		LFLAGS += -static
+		LDFLAGS += -static
 		LPATHS += -L${GLIBC_STATIC_DIR} -L${ZLIB_STATIC_DIR}
 		LLAPACK = -Wl,--start-group ${MKLROOT}/lib/intel64/libmkl_intel_lp64.a ${MKLROOT}/lib/intel64/libmkl_core.a ${MKLROOT}/lib/intel64/libmkl_intel_thread.a -Wl,--end-group
 	else ifeq (${linking},static-except-glibc)
-		LFLAGS += -static-intel -static-libstdc++ -static-libgcc
+		LDFLAGS += -static-intel -static-libstdc++ -static-libgcc
 		LPATHS += -L${ZLIB_STATIC_DIR}
 		LLAPACK = -Wl,--start-group ${MKLROOT}/lib/intel64/libmkl_intel_lp64.a ${MKLROOT}/lib/intel64/libmkl_core.a ${MKLROOT}/lib/intel64/libmkl_intel_thread.a -Wl,--end-group
 	else
@@ -94,7 +97,8 @@ else
 endif
 
 # build link line (minus flags)
-LLIBS = -lboost_program_options -lboost_iostreams -lz -lnlopt
+LLIBS = -lnlopt -lboost_program_options -lboost_iostreams -lz
+# LLIBS = /usr/local/lib/libboost_program_options.a -lnlopt -lboost_iostreams -lz
 ifeq (${linking},static-except-glibc)
 	L = ${LPATHS} -Wl,-Bstatic ${LLIBS} ${LLAPACK} -Wl,-Bdynamic -lpthread -lm
 else
@@ -110,10 +114,13 @@ OMAIN = BoltMain.o $O
 .PHONY: clean
 
 %.o: %.cpp
-	${CC} ${CFLAGS} ${CPATHS} -o $@ -c $<
+	${CXX} ${CXXFLAGS} ${CPATHS} -o $@ -c $<
 
 $T: ${OMAIN}
-	${CC} ${LFLAGS} -o $T ${OMAIN} $L
+	${CXX} ${LDFLAGS} -o $T ${OMAIN} $L
+
+install:
+	${INSTALL} -c -s $T ${DESTDIR}${PREFIX}/bin
 
 clean:
 	rm -f *.o
