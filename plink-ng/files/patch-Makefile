--- Makefile.orig	2018-05-02 22:35:16 UTC
+++ Makefile
@@ -1,42 +1,46 @@
 BASEFLAGS=-Wall -Wextra -Wshadow -Wformat-security -mavx2 -mbmi -mbmi2 -mlzcnt -DNDEBUG -DZSTD_MULTITHREAD
 # BASEFLAGS=-Wall -Wextra -Wshadow -Wformat-security -mavx2 -mbmi -mbmi2 -mlzcnt -DZSTD_MULTITHREAD
 # BASEFLAGS=-Wall -Wextra -Wshadow -Wformat-security -msse4.2 -DNDEBUG -DZSTD_MULTITHREAD
-CFLAGS=-O3 -std=gnu99
+
+CFLAGS		?= -O3
 # this actually needs to be named "CXXFLAGS"
-CXXFLAGS=-O2 -std=c++14 -Wold-style-cast
+CXXFLAGS	?= -O2
 
-CFLAGS += ${BASEFLAGS}
-CXXFLAGS += ${BASEFLAGS}
+CFLAGS		+= -std=gnu99 ${BASEFLAGS}
+CXXFLAGS	+= -std=c++14 -Wold-style-cast ${BASEFLAGS}
 
-ZLIB=../zlib-1.2.11/libz-64.a
+ZLIB	?= ../zlib-1.2.11/libz-64.a
 BLASFLAGS64=-llapack -lf77blas -latlas
-LINKFLAGS=-lm -lpthread -L. ${ZLIB}
+LDFLAGS	+= -lm -lpthread -L. ${ZLIB}
 ARCH32=
 
 UNAME := $(shell uname)
 ifeq ($(UNAME), Darwin)
   BLASFLAGS=-framework Accelerate
   BLASFLAGS64=-framework Accelerate
-  LINKFLAGS=-ldl -lpthread -lz
+  LDFLAGS=-ldl -lpthread -lz
 endif
 
 include Makefile.src
-CFLAGS += ${CINCLUDE} ${ZSTD_INCLUDE}
+CC	?= gcc
+CXX	?= g++
+CFLAGS	+= ${CINCLUDE} ${ZSTD_INCLUDE}
 
 %.o: %.c
-	gcc -c $(CFLAGS) $(ARCH32) -o $@ $<
+	${CC} -c $(CFLAGS) $(ARCH32) -o $@ $<
+
 %.o: %.cc
-	g++ -c $(CXXFLAGS) $(ARCH32) -o $@ $<
+	${CXX} -c $(CXXFLAGS) $(ARCH32) -o $@ $<
 
 all: plink2 pgen_compress
 
 # for clean build, "make clean" first
 plink2: $(OBJ)
-	g++ $(ARCH32) $(OBJ) -o bin/plink2 $(BLASFLAGS64) $(LINKFLAGS)
+	${CXX} $(ARCH32) $(OBJ) -o bin/plink2 $(BLASFLAGS64) $(LDFLAGS)
 
 # basic pgenlib_internal.h usage example; also needed for tests
 pgen_compress: plink2_base.o pgenlib_internal.o pgen_compress.o
-	g++ plink2_base.o pgenlib_internal.o pgen_compress.o -o bin/pgen_compress
+	${CXX} plink2_base.o pgenlib_internal.o pgen_compress.o -o bin/pgen_compress
 
 .PHONY: clean
 clean:
