--- Makefile.orig	2020-11-11 16:20:50 UTC
+++ Makefile
@@ -13,10 +13,10 @@
 # limitations under the License.
 
 unix: 128.h 32.h 32-64.h
-	$(CC) $(UnixFlags) *.c -o pooler -lm
+	$(CC) $(CFLAGS) *.c -o pooler -lm
 
 mac-portable: 128.h 32.h 32-64.h
-	$(CC) -mmacosx-version-min=10.7 $(UnixFlags) *.c -o pooler -lm
+	$(CC) -mmacosx-version-min=10.7 $(CFLAGS) *.c -o pooler -lm
 # (this is for compiling for distribution on a Mac that is
 # higher than 10.7, to make sure the result will still run
 # on 10.7 (lower is rarely possible nowadays).  But 10.9's
@@ -51,7 +51,8 @@ WinFlags=-Wall -Os -flto -static -fopenmp # TODO: comd
 
 CC0=$(shell if gcc --version >/dev/null 2>/dev/null; then echo gcc; else echo cc; fi) # some Macs have both but only the gcc supports OpenMP, so prefer that
 CC1=$(shell echo 'int main(){}' > _test.c; if $(CC0) -mtune=native _test.c -o /dev/null 2>/dev/null; then echo -mtune=native; fi; if $(CC0) -fopenmp _test.c -o /dev/null 2>/dev/null; then echo -fopenmp; fi; rm _test.c) # -march=native inadvisable if distributing the binary (and on some setups -mtune=native is available but -march=native isn't)
-CC=$(CC0) $(CC1)
+CC ?=		$(CC0) $(CC1)
+CFLAGS ?=	${UnixFlags}
 
 .PHONY: clean test-other
 clean:
@@ -76,8 +77,8 @@ pooler.tgz: clean
 
 # check things still at least compile:
 test-other: 128.h 32.h 32-64.h
-	$(CC) $(UnixFlags) -m32 *.c -o /dev/null # 32-64.h
-	$(CC) $(UnixFlags) -D__ARM_ARCH_ISA_A64 *.c -o /dev/null # 64-only.h
+	$(CC) $(CFLAGS) -m32 *.c -o /dev/null # 32-64.h
+	$(CC) $(CFLAGS) -D__ARM_ARCH_ISA_A64 *.c -o /dev/null # 64-only.h
 
 # Use of UPX to reduce .exe size and save server space.
 # This won't give as good a compression as .zip or .7z,
@@ -118,6 +119,11 @@ all: pooler
 install: all
 	$(INSTALL_PROGRAM) pooler $(DESTDIR)/$(PREFIX)/bin/
 	$(INSTALL_MAN) pooler.1 $(DESTDIR)/$(PREFIX)/man/man1/
+
+install-strip: install
+	$(STRIP) $(DESTDIR)/$(PREFIX)/bin/pooler
+
+STRIP	?= strip
 PREFIX?=usr/local
 INSTALL_PROGRAM?=cp
 INSTALL_MAN?=cp
